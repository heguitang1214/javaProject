<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<context:annotation-config />
	<context:component-scan base-package="springDemo.aopXml"/>

	<bean id="logInterceptor" class="springDemo.aopXml.aop.LogInterceptor"/>

	<!--aop的xml配置:方式一-->
	<aop:config>
		<!--配置织入点,这个织入点在整个aop里面都可以使用-->
		<aop:pointcut id="servicePointcut" expression="execution(public * springDemo.aopXml.service..*.add(..))"/>

		<aop:aspect id="logAspect" ref="logInterceptor">
			<aop:before method="before" pointcut-ref="servicePointcut"/>
		</aop:aspect>
	</aop:config>

	<!--aop的xml配置:方式二-->
	<!--<aop:config>-->
		<!--<aop:aspect id="logAspect" ref="logInterceptor">-->
			<!--&lt;!&ndash;配置织入点,这个织入点只能在当前的aspect中使用&ndash;&gt;-->
			<!--<aop:pointcut id="servicePointcut" expression="execution(public * spring.aopXml.service..*.add(..))"/>-->
			<!--<aop:before method="before" pointcut-ref="servicePointcut"/>-->
		<!--</aop:aspect>-->
	<!--</aop:config>-->

	<!--aop的xml配置:方式三(方式二的简化)-->
	<!--<aop:config>-->
		<!--<aop:aspect id="logAspect" ref="logInterceptor">-->
			<!--<aop:before method="before" pointcut="execution(public * spring.aopXml.service..*.add(..))"/>-->
		<!--</aop:aspect>-->
	<!--</aop:config>-->


</beans>