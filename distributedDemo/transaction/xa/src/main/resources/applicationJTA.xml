<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:component-scan base-package="ai.yunxi.demo.*.jta" />

	<!--db0.t_order表-->
	<bean id="dataSourceOrder" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="order_resource" />
		<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="url">jdbc:mysql://localhost:3306/test?useSSL=false</prop>
				<prop key="username">root</prop>
				<prop key="password">root</prop>
				<!-- 最大并发连接数 -->
				<prop key="maxActive">10</prop>
				<!-- 初始化连接数量 -->
				<prop key="initialSize">5</prop>
				<!-- 配置获取连接等待超时的时间 -->
				<prop key="maxWait">30000</prop>
				<!-- 最小空闲连接数 -->
				<prop key="minIdle">5</prop>
				<prop key="maxIdle">10</prop>
				<!-- 打开 removeAbandoned 功能 -->
				<prop key="removeAbandoned">true</prop>
				<prop key="removeAbandonedTimeout">1800</prop>
				<!-- 关闭 abanded 连接时输出错误日志 -->
				<prop key="logAbandoned">true</prop>
			</props>
		</property>
	</bean>

	<!--db1.t_product表-->
	<bean id="dataSourceStock" class="com.atomikos.jdbc.AtomikosDataSourceBean">
		<property name="uniqueResourceName" value="stock_resource" />
		<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource" />
		<property name="xaProperties">
			<props>
				<!--<prop key="url">jdbc:mysql://192.168.110.130:3306/test?useSSL=false</prop>-->
				<prop key="url">jdbc:mysql://localhost:3306/java?useSSL=false</prop>
				<prop key="username">root</prop>
				<prop key="password">root</prop>
				<!-- 最大并发连接数 -->
				<prop key="maxActive">10</prop>
				<!-- 初始化连接数量 -->
				<prop key="initialSize">5</prop>
				<!-- 配置获取连接等待超时的时间 -->
				<prop key="maxWait">30000</prop>
				<!-- 最小空闲连接数 -->
				<prop key="minIdle">2</prop>
				<prop key="maxIdle">10</prop>
				<!-- 打开 removeAbandoned 功能 -->
				<prop key="removeAbandoned">true</prop>
				<prop key="removeAbandonedTimeout">1800</prop>
				<!-- 关闭 abanded 连接时输出错误日志 -->
				<prop key="logAbandoned">true</prop>
			</props>
		</property>
	</bean>

	<!-- atomikos事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<!--db0.t_order表-->
	<bean id="jdbcTemplateOrder" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSourceOrder" />
	</bean>

	<!--db1.t_product表-->
	<bean id="jdbcTemplateStock" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSourceStock" />
	</bean>

	<!-- spring 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<!-- spring 事务模板 -->
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
	</bean>

</beans>